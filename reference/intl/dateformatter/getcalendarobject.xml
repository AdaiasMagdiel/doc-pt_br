<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1976eae0d815797af97a1e16c5cd90ffc2868395 Maintainer: leonardolara Status: ready -->
<refentry xml:id="intldateformatter.getcalendarobject" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlDateFormatter::getCalendarObject</refname>
  <refname>datefmt_get_calendar_object</refname>
  <refpurpose>Obtém uma cópia do objeto de calendário do formatador</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>
   &style.oop;
  </para>
  <methodsynopsis role="IntlDateFormatter">
   <modifier>public</modifier> <type class="union"><type>IntlCalendar</type><type>false</type><type>null</type></type><methodname>IntlDateFormatter::getCalendarObject</methodname>
   <void/>
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis>
   <type class="union"><type>IntlCalendar</type><type>false</type><type>null</type></type><methodname>datefmt_get_calendar_object</methodname>
   <methodparam><type>IntlDateFormatter</type><parameter>formatter</parameter></methodparam>
  </methodsynopsis>

  <para>
   Obtém uma cópia do objeto de calendário usado internamente pelo formatador. Este
   calendário terá um tipo (como gregoriano, japonês, budista, persa,
   islâmico, etc.) e um fuso horário que corresponde ao tipo e ao fuso usados pelo
   formatador. A data e o horário do objeto não são especificados.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Uma cópia do objeto de calendário interno usado pelo formatador,
   ou &null; se nenhum foi definido, &return.falseforfailure;.
  </para>
 </refsect1>


 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>IntlDateFormatter::getCalendarObject</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$formatter = IntlDateFormatter::create(
    "fr_FR@calendar=islamic",
    NULL,
    NULL,
    "GMT-01:00",
    IntlDateFormatter::TRADITIONAL
);

$cal = $formatter->getCalendarObject();

var_dump(
    $cal->getType(),
    $cal->getTimeZone(),
    $cal->getLocale(Locale::VALID_LOCALE)
);

]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(7) "islamic"
object(IntlTimeZone)#3 (4) {
  ["valid"]=>
  bool(true)
  ["id"]=>
  string(9) "GMT-01:00"
  ["rawOffset"]=>
  int(-3600000)
  ["currentOffset"]=>
  int(-3600000)
}
string(5) "fr_FR"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>IntlDateFormatter::getCalendar</function></member>
    <member><function>IntlDateFormatter::setCalendar</function></member>
    <member><classname>IntlCalendar</classname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
