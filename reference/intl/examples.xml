<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: af4410a7e15898c3dbe83d6ea38246745ed9c6fb Maintainer: leonardolara Status: ready -->

<chapter xml:id="intl.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;

 <section xml:id="intl.examples.basic">
  <title>Uso básico desta extensão</title>
  <para>
   Cada módulo fornece dois tipos de API: um procedural e um orientado
   a objeto. Ambos são na realidade idênticos e descritos no
   documento correspondente.
  </para>
  <note>
   <para>
    Todos as strings de entrada devem estar na codificação UTF-8. Todas as strings de saída
    também estarão em UTF-8.
   </para>
  </note>
  <example>
   <title>Exemplo de uso da API procedural</title>
   <programlisting role="php">
<![CDATA[
<?php
$coll  = collator_create('pt_BR');
$result = collator_compare($coll, "string#1", "string#2");
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Exemplo de uso da API procedural orientada a objeto</title>
   <programlisting role="php">
<![CDATA[
<?php
$coll = new Collator('pt_BR');
$al   = $coll->getLocale(Locale::ACTUAL_LOCALE);
echo "Localidade atual: $al\n";

$formatter = new NumberFormatter('pt_BR', NumberFormatter::DECIMAL);
echo $formatter->format(1234567);
?>
]]>
   </programlisting>
  </example>
 </section>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

