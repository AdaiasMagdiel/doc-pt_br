<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b8758b0605e80c4e3610137b7502a6abeea5c69b Maintainer: leonardolara Status: ready -->

<refentry xml:id="oauthprovider.generatetoken" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>OAuthProvider::generateToken</refname>
  <refpurpose>Gera um token aleatório</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier> <modifier>public</modifier> <modifier>static</modifier> <type>string</type><methodname>OAuthProvider::generateToken</methodname>
   <methodparam><type>int</type><parameter>size</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>strong</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Gera uma <type>string</type> de bytes pseudo-randômicos.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>size</parameter></term>
    <listitem>
     <para>
      O comprimento desejado do token, em bytes.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>strong</parameter></term>
    <listitem>
     <para>
      Definir para &true; significa que <literal>/dev/random</literal> será usado para
      entropia, caso contrário <literal>/dev/urandom</literal> (de não-bloqueio) será usado.
      Este parâmetro é ignorado no Windows.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   O token gerado, como uma <type>string</type> de bytes.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Se o parâmetro <parameter>strong</parameter> for &true;, um erro
   de nível <constant>E_WARNING</constant> será emitido quando a
   implementação de <function>rand</function> for usada para preencher
   os bytes aleatórios remanescentes (ex.: quando não forem encontrados dados aleatórios suficientes
   inicialmente).
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplo de <function>OAuthProvider::generateToken</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$p = new OAuthProvider();

$t = $p->generateToken(4);

echo strlen($t),  PHP_EOL;
echo bin2hex($t), PHP_EOL;

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
4
b6a82c27
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Quando dados aleatórios insuficientes estiverem disponíveis ao sistema, esta função irá
    preencher os bytes aleatórios remanescentes usando a implementação <function>rand</function>
    interna do PHP.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>openssl_random_pseudo_bytes</function></member>
   <member><function>mcrypt_create_iv</function></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
