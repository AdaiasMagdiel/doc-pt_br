<?xml version="1.0" encoding="utf-8"?><!-- EN-Revision: 7ad99aeafea66a1562f668aa3cb11dcc9d9cb951 Maintainer: leonardolara Status: ready -->
<chapter xml:id="outcontrol.flushing-system-buffers" xmlns="http://docbook.org/ns/docbook">
 <title>Descarregando Buffers de Sistema</title>
 <para>
  O PHP fornece duas maneiras relacionadas
  para descarregar os buffers de sistema (enviar e descartar o conteúdo):
  chamando-se a função <function>flush</function>
  e habilitando o descarregamento implicitamente
  com a função <function>ob_implicit_flush</function>
  ou com a configuração <link linkend="ini.implicit-flush">implicit_flush</link>
  do &php.ini;.
 </para>

 <section>
  <title>Comportamento do Descarregameto da Saída</title>
  <para>
   Com o descarregamento implícito desabilitado, o PHP irá descarregar a saída somente
   quendo <function>flush</function> for chamada ou quando o script terminar.
  </para>
  <para>
   Com o descarregamento implícito habilitado, o PHP tentará descarregar
   após cada bloco de código que resulte em uma saída.
   A saída neste contexto é um dado de comprimento maior que zero que:
   <itemizedlist xml:id="outputcontrol.what-is-output">
    <listitem>
     <simpara>
      esteja fora das tags <literal>&#60;?php ?&#62;</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      seja exibido por construções de linguagem e funções
      cujo propósito explícito é mostrar variáveis fornecidas pelo usuário ou strings tais como
      <function>echo</function>, <function>print</function>,
      <function>printf</function>, <function>var_dump</function>,
      <function>var_export</function> e <function>vprintf</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      seja exibido por funções cujo propósito é coletar e mostrar
      dados/informações no script em execução ou no PHP tais como
      <function>debug_print_backtrace</function>, <function>phpcredits</function> e
      <function>phpinfo</function>,
      <methodname>ReflectionExtension::info</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      seja mostrado pelo PHP em uma exceção não capturada ou erro não gerenciado
      (sujeitos às configurações de
      <link linkend="ini.display-errors">display_errors</link>
      e <link linkend="ini.error-reporting">error_reporting</link>)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      seja qualquer coisa escrita em <literal>php://output</literal>
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <note>
   <simpara>
    Exibir strings vazias ou enviar cabeçalhos não é considerado saída
    e não resultará em operação de descarregamento.
   </simpara>
  </note>
  <warning>
   <simpara>
    Se o descarregamento implícito estiver habilitado, caracteres de controle
    (ex.: <literal>"\n"</literal>, <literal>"\r"</literal>,
    <literal>"\0"</literal>)
    também irão ativar o descarregamento.
   </simpara>
  </warning>
 </section>

 <section>
  <title>Limitações</title>
  <para>
   Esta funcionalidade não pode descarregar buffers de saída no nível do usuário.
   Para usá-los juntos, buffers de saída no nível do usuário devem ser descarregados
   antes do descarregamento ds buffers de sistema para que o PHP produza qualquer saída.
  </para>
  <warning>
   <simpara>
    Chamar <function>flush</function> ou habilitar o descarregamento implícito
    pode interferir com os manipuladores de saída de buffers no nível do usuário
    que definem e enviam cabeçalhos em um contexto web
    (ex.: <function>ob_gzhandler</function>)
    enviando cabeçalhos antes que estes manipuladores o façam.
   </simpara>
  </warning>
  <para>
   Buffer implementado pelo software/hardware subjacente
   não podem ser substituídos pelo PHP e devem ser levados em consideração
   ao se trabalhar com as funções de controle de buffer do PHP.
   Verificar as configurações de buffer dos servidores web, navegadores e consoles
   e trabalhar com elas pode aliviar possíveis problemas.
   Trabalhar em um contexto web, tanto as configurações de buffer do servidor
   quanto de buffer do script podem ser ajustadas para operar sequencialmente
   enquanto que contornar as estratégias de buffer de vários navegadores
   pode ser conseguido ajustando o buffer no script PHP.
   Em consoles que implementam buffer de linha,
   caracteres de nova linha podem ser inseridos nos locais
   apropriados antes de liberar a saída.
  </para>
 </section>

 <section>
  <title>Diferenças <acronym>SAPI</acronym> No Descarregamento</title>
  <para>
   Embora o descarregamento seja implementado por cada <acronym>SAPI</acronym>
   de uma maneira ligeiramente diferente,
   essas implementações se enquadram em uma de duas categorias:
   <itemizedlist>
    <listitem>
     <simpara>
      <acronym>SAPI</acronym>s usadas em um contexto web irão descarregar cabeçalhos primeiro,
      e depois a saída.
      <literal>Apache2Handler</literal>, <literal>CGI</literal>,
      <literal>FastCGI</literal> e <literal>FPM</literal>
      são tais <acronym>SAPI</acronym>s.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Outras <acronym>SAPI</acronym>s
      tais como <literal>CLI</literal> e <literal>embed</literal>
      irão descarregar somente a saída.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </section>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
