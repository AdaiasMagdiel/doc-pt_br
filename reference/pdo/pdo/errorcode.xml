<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 661e6858acade9f5a08fc8f9c07b605f42f4a700 Maintainer: leonardolara Status: ready -->
<refentry xml:id="pdo.errorcode" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::errorCode</refname>
  <refpurpose>
   Busca o SQLSTATE associado com a última operação no identificador do banco de dados
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>string</type><type>null</type></type><methodname>PDO::errorCode</methodname>
   <void/>
  </methodsynopsis>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um SQLSTATE, um identificador alfanumérico de cinco caracteres definido no
   padrão ANSI SQL-92. Resumidamente, um SQLSTATE consiste em um
   valor de classe de dois caracteres seguido por um valor de subclasse de três caracteres. Um
   valor de classe de '01' indica um alerta e é acompanhado por um código de retorno
   de SQL_SUCCESS_WITH_INFO. Valores de classe diferentes de '01', exceto pela
   classe 'IM', indicam um erro. A classe 'IM' é específica para alertas
   e erros que derivam da implementação do próprio PDO (ou talvez do ODBC,
   se estiver em uso). O valor de subclasse '000' em qualquer
   classe indica que não há subclasse para aquele SQLSTATE.
  </para>
  <para>
   <methodname>PDO::errorCode</methodname> somente busca códigos de erro para operações
   realizadas diretamente no identificador do banco de dados. Se for criado um objeto
   PDOStatement através de <methodname>PDO::prepare</methodname> ou
   <methodname>PDO::query</methodname> e for invocado um erro no identificador da
   instrução, <methodname>PDO::errorCode</methodname> não refletirá esse erro.
   Deve-se chamar <methodname>PDOStatement::errorCode</methodname> para retornar o código de
   erro para uma operação realizada em um identificador de instrução em particular.
  </para>
  <para>
   Retorna &null; se nenhuma operação foi executada no identificador do banco de dados.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Buscando um código SQLSTATE</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Provoca um erro -- a tabela OSSOS não existe */
$dbh->exec("INSERT INTO ossos(cranio) VALUES ('lucy')");

echo "\nPDO::errorCode(): ", $dbh->errorCode();
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
PDO::errorCode(): 42S02
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::errorInfo</methodname></member>
    <member><methodname>PDOStatement::errorCode</methodname></member>
    <member><methodname>PDOStatement::errorInfo</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
